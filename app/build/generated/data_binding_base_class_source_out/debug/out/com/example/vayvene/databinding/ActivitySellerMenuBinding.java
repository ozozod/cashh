// Generated by view binder compiler. Do not edit!
package com.example.vayvene.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.vayvene.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySellerMenuBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnBalance;

  @NonNull
  public final Button btnCancel;

  @NonNull
  public final Button btnLogout;

  @NonNull
  public final Button btnSale;

  @NonNull
  public final Button btnSummary;

  private ActivitySellerMenuBinding(@NonNull LinearLayout rootView, @NonNull Button btnBalance,
      @NonNull Button btnCancel, @NonNull Button btnLogout, @NonNull Button btnSale,
      @NonNull Button btnSummary) {
    this.rootView = rootView;
    this.btnBalance = btnBalance;
    this.btnCancel = btnCancel;
    this.btnLogout = btnLogout;
    this.btnSale = btnSale;
    this.btnSummary = btnSummary;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySellerMenuBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySellerMenuBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_seller_menu, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySellerMenuBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnBalance;
      Button btnBalance = ViewBindings.findChildViewById(rootView, id);
      if (btnBalance == null) {
        break missingId;
      }

      id = R.id.btnCancel;
      Button btnCancel = ViewBindings.findChildViewById(rootView, id);
      if (btnCancel == null) {
        break missingId;
      }

      id = R.id.btnLogout;
      Button btnLogout = ViewBindings.findChildViewById(rootView, id);
      if (btnLogout == null) {
        break missingId;
      }

      id = R.id.btnSale;
      Button btnSale = ViewBindings.findChildViewById(rootView, id);
      if (btnSale == null) {
        break missingId;
      }

      id = R.id.btnSummary;
      Button btnSummary = ViewBindings.findChildViewById(rootView, id);
      if (btnSummary == null) {
        break missingId;
      }

      return new ActivitySellerMenuBinding((LinearLayout) rootView, btnBalance, btnCancel,
          btnLogout, btnSale, btnSummary);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
